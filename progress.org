#+CATEGORY: cgrlib
* cgrlib progress
* ---------------------------- Dated notes -----------------------------
* <2013-11-17 Sun> Created this document
* <2014-03-19 Wed> A note about setuptools
  - You can have weird installation errors if this isn't updated.  As
    usual, use pip install --upgrage setuptools to get it up to date.
* ----------------------------- TODO list ------------------------------
* cgr-capture script
** Offset calibration values should be read out of eeprom
   - Only if calibration file does not exist.  The cgr object needs
     to be passed to the function that gets the calibration values.
     And this function needs to fill in the default offsets in the
     dictionary using values pulled from the device.
   - I realize that the offset value depends on the slope.  This is
     necessary to have 511 counts be 0V.  But the slope value doesn't
     usually need calibration.  The slope is 44.5 mV/count.  If I
     store the calibration value as straight mV, I would divide by
     44.5 before using the value in calculations.  Need to verify
     what uncalibrated offsets are.
*** TODO Decide how the offset number should be formatted
    - The cgr stores offsets as 8-bit signed integers.  
** DONE config object passed to utils get_cgr()
** TODO What are good values for slope and offset?
** TODO Save data function should write timestamp to file
** DONE Custom serial port list should be added to the config
   - The config should have a connection section.  There should be a
     list of custom serial ports, and there should be a lastport
     variable.  This lastport variable will be written at runtime.
** DONE Write plotinit() function
   - Configures the plot, returns the plot object (gplot)
** DONE gplot object needs to be created in the main loop
   - This keeps the plot from being destroyed until the program is
     done.  This allows plotting the result of each average without
     destroying the plot.
** DONE What happens if cgr-capture is run from whatever directory?
   - Seems like I need to have a search routine for the config file.
   - Nice!  The script creates a default config file from wherever the
     script was called from!  This is exactly what I want!
** DONE Create savedata function
   - Unfortunately, the datafile will need to have a lot of metadata
     in it.  The saveddata function needs to take the config object as
     an argument, since I'll be specifying the save file name in
     there.
** DONE Calibration factor dates must be checked when used
   - If the dates are 'none' or more than a year apart, a warning
     should be raised.  See the caldict_default dictionary in utils.py
     for a list of all calibration factors and their associated dates.
   - I started doing this with get_cal_data() from utils.py.  This
     needs to be extended to the remaining calibration factors.
** DONE Cal file should be set in the config file
** DONE One command-line argument should be init file
   - The default should be cgr-capture.cfg, but it should accept
     alternates.
** DONE Check to see that averaging works
* cgrlib
** DONE Get rid of message delay
   - Do this after testing various delays.  Realize that you'll never
     get much faster than 10ms of delay.
   - This can't be done.  A message delay is necessary.
* setup.py script
** TODO Where do the example scripts get copied upon install?
   - They get copied to usr/bin
** DONE Check to see if dependencies actually get updated
   - They do!  You just don't see all the output from the setup.py script.
** DONE Restructure project to have a tools directory
   - The tools directory will have the cgr-capture and cgr-cal
     scripts.  This will allow me to struture the project like
     pelican, and use the console scripts method to create
     executables.
** TODO Store the version number in a better way
   - I need to be able to print out the version number on the command line.
   - The fix may be here: http://stackoverflow.com/questions/458550/standard-way-to-embed-version-into-python-package
* cgr-cal script
** TODO Offset values need to be written to both the file and eeprom
** TODO Test new cgr-cal with new plotting code
** DONE What is this output file?  
** DONE Add support for averaging while measuring slopes
** DONE Add makefile to automate install and reindent steps
   - This will give me a place to write comments about the reindent
     and installation scripts.  As long as the makefile isn't in the
     manifest, it won't be added to the package.
** TODO Add checks for slope and offset values
   - Offset counts should be within 10 counts of zero, and offsets
     should be within 10% of 45mV / count.  Fail the calibration and
     don't write any calibration factors if this happens.
** DONE Add way to escape offset calibration
** DONE Config file should specify which voltage to ask for
** DONE Calibration dates need to be added to caldict
   - caldict members _caldate should be added for each calibration
     coefficient.  For example, since there's a chA_1x_offset member,
     there should be a chA_1x_offset_caldate member.  If the member
     has never been calibrated, the caldate should be 'none'.  When
     the calibration coefficient is used, there should be a warning
     that the coefficient has never been updated from its default
     value.
** DONE There should be a file to keep last port
   - Should have the last port connected to.  This could be something
     like cgr-session.pkl.
** DONE Custom serial port list should be added to config
** DONE cal file should be set in config file
   - Right now it's specified in the utils.py file.  Its name is cgrcal.pkl.
** DONE utils.load_cal() should take a filename
** DONE trigdict needs to be set manually for calibration
   - Trigger source needs to be manual, and points needs to be set to
     whatever -- 500.  This should be pulled out of the configuration
     file.
** DONE get_offsets function should just get offsets specified by cfg
   - Right now the function runs through both gain settings.  I think
     a better way is to only use the gain setting set in the config
     file.  
* readme file
** TODO Document how to set up gnuplot
*** Installing gnuplot.py
**** Using pip
     - pip install gnuplot-py
